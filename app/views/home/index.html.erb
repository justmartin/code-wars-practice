<div class="panel panel-primary">
  <div class="panel-heading">
    <h3 class="panel-title">Formatting decimal places #0</h3>
    <p>Each number should be formatted that it is rounded to two decimal places. You don't need to check whether the input is a valid number because only valid numbers are used in the tests.</p>
  </div>
  <div class="panel-body">
<pre class="prettyprint lang-ruby linenums">
def two_decimal_places(n)
  n.round(2)
end
</pre>
  </div>
</div>

<div class="panel panel-primary">
  <div class="panel-heading">
    <h3 class="panel-title">How many lightsabers do you own?</h3>
    <p>Inspired by the development team at Vooza, write the function howManyLightsabersDoYouOwn that accepts the name of a programmer, and returns the number of lightsabers owned by that person. The only person who owns lightsabers is Zach, by the way. He owns 18, which is an awesome number of lightsabers. Anyone else owns 0.</p>
  </div>
  <div class="panel-body">
<pre class="prettyprint lang-ruby linenums">
def howManyLightsabersDoYouOwn(name = "")
  if name == "Zach"
    18
  else
    0
  end
end
</pre>

<pre class="prettyprint lang-ruby linenums">
def howManyLightsabersDoYouOwn(name="")
  name == "Zach" ? 18 : 0
end
</pre>
  </div>
</div>

<div class="panel panel-primary">
  <div class="panel-heading">
    <h3 class="panel-title">Are You Playing Banjo?</h3>
    <p>Create a function which answers the question "Are you playing Banjo?". If your name starts with the letter "R" or lower case "r", you are playing Banjo!</p>
  </div>
  <div class="panel-body">
<pre class="prettyprint lang-ruby linenums">
def are_you_playing_banjo(name)
  if name.downcase[0] == "r"
    name + " plays banjo"
  else
    name + " does not play banjo"
  end
end
</pre>

<pre class="prettyprint lang-ruby linenums">
def are_you_playing_banjo(name)
  name[0].downcase == "r" ? "#{name} plays banjo" : "#{name} does not play banjo"
end
</pre>
  </div>
</div>

<div class="panel panel-primary">
  <div class="panel-heading">
    <h3 class="panel-title">Removing Elements</h3>
    <p>Take an array and remove every second element out of that array. Always keep the first element and start removing with the next element.</p>
  </div>
  <div class="panel-body">
<pre class="prettyprint lang-ruby linenums">
def remove_every_other(arr)
  arr.select.each_with_index { |_, i| i.even? }
end
</pre>
  </div>
</div>

<div class="panel panel-primary">
  <div class="panel-heading">
    <h3 class="panel-title">Even or Odd</h3>
    <p>Create a function that takes an integer as an argument and returns "Even" for even numbers or "Odd" for odd numbers.</p>
  </div>
  <div class="panel-body">
<pre class="prettyprint lang-ruby linenums">
def even_or_odd(number)
  number.even? ? "Even" : "Odd"
end
</pre>
  </div>
</div>

<div class="panel panel-primary">
  <div class="panel-heading">
    <h3 class="panel-title">Friend or Foe?</h3>
    <p>Make a program that filters a list of strings and returns a list with only your friends name in it. If a name has 4 letters in it, you can be sure that it has to be a friend of yours!</p>
  </div>
  <div class="panel-body">
<pre class="prettyprint lang-ruby linenums">
def friend(friends)
  arr = []
  friends.collect { |x| arr.push(x) if x.length == 4  }
  return arr
end
</pre>

<pre class="prettyprint lang-ruby linenums">
def friend(friends)
  friends.select { |name| name.length == 4 }
end
</pre>
  </div>
</div>

<div class="panel panel-primary">
  <div class="panel-heading">
    <h3 class="panel-title">Sum of two lowest positive integers</h3>
    <p>Create a function that returns the sum of the two lowest positive numbers given an array of minimum 4 integers. No floats or empty arrays will be passed.</p>
  </div>
  <div class="panel-body">
<pre class="prettyprint lang-ruby linenums">
def sum_two_smallest_numbers(numbers)
  sorted = numbers.sort
  min1 = sorted[0]
  min2 = sorted[1]
  result = min1 + min2
end
</pre>

<pre class="prettyprint lang-ruby linenums">
def sum_two_smallest_numbers(numbers)
  numbers.min(2).reduce(:+)
end
</pre>
  </div>
</div>